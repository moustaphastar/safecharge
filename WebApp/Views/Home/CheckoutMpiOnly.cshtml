@model Safecharge.Response.GetSessionTokenResponse
@{
  ViewBag.Title = "Checkout Page";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Start Checkout -->
<section class="shop checkout section">
  <div class="container">
    <div class="row">
      <div class="col-6 m-sm-auto">
        <div class="order-details">
          <!-- Order Widget -->
          <div class="single-widget">
            <h2>Checkout Details</h2>
            <div class="content">
              <ul>
                <li>Amount to pay<span id="checkoutTotal">$@String.Format("{0:c}", ViewBag.AuthorizedAmount)</span></li>
              </ul>
            </div>
          </div>
          <!--/ End Order Widget -->
          <!-- Payment Method Widget -->
          <div class="single-widget">
            <div class="col-12">
              <div class="form-group">
                <label for="cardNumber">Card Number</label>
                <select class="form-control form-control-sm" id="cardSelect" onchange="cardSelected()">
                  <option label="3DS v2 Frictionless Flow Test Card [4000020951595032]" selected="selected">4000020951595032</option>
                  <option label="3DS v2 Challenge Flow Test Card [2221008123677736]">2221008123677736</option>
                  <option label="3DS v1 Flow Card Fallback [4407106439671112]">4407106439671112</option>
                  <option label="Non-3DS Approved Card [4000023104662535]">4000023104662535</option>
                  <option label="Non-3DS Declined Card [4008370896662369]">4008370896662369</option>
                  <option label="Simple Auth Card [2221008123677736]">2221008123677736</option>
                </select>
              </div>
              <div class="form-group">
                <input type="hidden" id="cardNumber" />
              </div>
              <div class="form-group">
                <label for="cardHolderName">Card Holder Name</label>
                <input type="text" id="cardHolderName" class="col-12" placeholder="FL-BRW1" value="FL-BRW1" />
              </div>
              <div class="form-group">
                <label for="expMonth">Expiry Month</label>
                <input type="text" id="expMonth" class="col-12" placeholder="12" value="12" />
              </div>
              <div class="form-group">
                <label for="expYear">Expiry Year</label>
                <input type="text" id="expYear" class="col-12" placeholder="25" value="25" />
              </div>
              <div class="form-group">
                <label for="CVV">CVV</label>
                <input type="text" id="CVV" class="col-12" placeholder="217" value="217" />
              </div>
              <input type="hidden" id="methodUrl" value="" />
            </div>
          </div>
          <!--/ End Payment Method Widget -->
          <!-- Button Widget -->
          <div class="single-widget get-button">
            <div class="content">
              <div class="button">
                <button id="payoutButton" onclick="main();" class="btn btn-primary">Submit Payment</button>
              </div>
            </div>
          </div>
          <!--/ End Button Widget -->
        </div>
        <div class="col-6 m-sm-auto">
          <div id="textarea"></div>
        </div>
      </div>
    </div>
  </div>
</section>
<!--/ End Checkout -->
<!-- Fingerprinting-->
<form id="fingerprintform" name="frm" method="POST" action="">
  <input type="hidden" id="fingerprintinput" name="threeDSMethodData" value="">
</form>
<!-- when the form is submitted, the server response will appear in this iframe -->
<div id="iframe" style="width:0px; height:0px; visibility:hidden">
  <input type="hidden" id="methodCompletionInd" value="U" />
</div>

<form id="ChallengeFormv2" method="POST" action="" target="ChallengeWindowv2">

  <input type="hidden" id="creq" name="creq" value="" />;

  <input type="submit" value="proceed to issuer">
</form>

<form id="threeD" name="threeD" method="POST" action="" target="ChallengeWindowv1">
  <input type="hidden" id="PaReq" name="PaReq" value="">
  <input type="hidden" id="TermUrl" name="TermUrl" value="">
  <input type="hidden" id="MD" name="MD" value="">
  <input type="submit" id="proceed" value="proceed to issuer">
</form>

<!--/ End Fingerprinting -->

@section Scripts{
  <script src="https://cdn.safecharge.com/safecharge_resources/v1/websdk/safecharge.js"></script>
  <script>
  function main() {
    var cardholderName = document.getElementById('cardHolderName').value;
    var cardNumber = document.getElementById('cardSelect').value;
    var expMonth = document.getElementById('expMonth').value;
    var expYear = document.getElementById('expYear').value;
    var CVV = document.getElementById('CVV').value;
    var amount = "@String.Format("{0:c}", ViewBag.AuthorizedAmount)";
    var currency = "@ViewBag.Currency";
    var timestamp = "@ViewBag.TimeStmap";
    var checksum = "@ViewBag.Checksum"
    var checksumForPayment = "@ViewBag.ChecksumForPayment"
    var methodUrl = document.getElementById("methodUrl").value;
    var methodCompletionInd = document.getElementById("methodCompletionInd").value;

    var initPaymentRequest =
    {
      "sessionToken": "@Model.SessionToken",
      "amount": amount,
      "currency": currency,
      "paymentOption": {
        "card": {
          "cardNumber": cardNumber,
          "cardHolderName": cardholderName,
          "expirationMonth": expMonth,
          "expirationYear": expYear,
          "CVV": CVV,
          "threeD": {
            "methodNotificationUrl": methodUrl
          }
        }
      },
      "billingAddress": {
        "country": "GB",
        "email": "john.smith@safecharge.com",
      }
    };
    console.log("Step-3: Init payment");
    console.log("Step-3: Init payment client request to merchant server");
    console.log(initPaymentRequest);

    $.ajax({
      method: "POST",
      url: "https://localhost:44356/api/threeD/initpayment",
      data: JSON.stringify(initPaymentRequest),
      contentType: "application/json",
      success: function (initPaymentResponse) {
        console.log("Step-3: Init payment merchant server response");
        console.log(initPaymentResponse);
        alert("PAYMENT INIT OK!");

        console.log("Step-4: Browser fingerprinting");
        // Check if the response redirects to a CHALLENGE.
        // If only v2 supported and methorUrl contains a notification url.
        if (initPaymentResponse.paymentOption.card.threeD.v2supported === "true"
            && initPaymentResponse.paymentOption.card.threeD.methodUrl !== null
            && initPaymentResponse.paymentOption.card.threeD.methodUrl !== ""
            && initPaymentResponse.paymentOption.card.threeD.methodUrl !== undefined) {

          // We are going to finger print.
          var methodUrl = initPaymentResponse.paymentOption.card.threeD.methodUrl;
          var methodPayload = initPaymentResponse.paymentOption.card.threeD.methodPayload;

          console.log(methodUrl);
          console.log(methodPayload);

          // Write an hidden iframe, put a form inside with methodPayload and post to ACS issuer.
          var iframe = $('<iframe name="postframe" id="postframe" class="hidden" src="about:blank" />');
          $('div#iframe').append(iframe);
          $('#fingerprintinput').val(methodPayload);
          $('#fingerprintform').attr("action", methodUrl);
          $('#fingerprintform').attr("method", "post");
          $('#fingerprintform').attr("content-type", "application/json");
          $('#fingerprintform').attr("target", "postframe");
          $('#fingerprintform').submit();

          // Wait 10 seconds for the fingerprinting to complete.
          function waitSeconds(iMilliSeconds) {
            var counter = 0, start = new Date().getTime(), end = 0;
            while (counter < iMilliSeconds) {
              end = new Date().getTime();
              counter = end - start;
            }
          }

          waitSeconds(10000);

          // Fingerprinting should complete successfully setting methodCompletionInd to "Y".
          // If it is not then set it to "N".
          //if(methodCompletionInd !== "Y") //methodCompletionInd = "N";
          console.log("Step-4: Browser fingerprinting done.");
          alert("BROWSER FINGERPRINTING DONE!")
        } else {
          console.log("Step-4: Browser fingerprinting not needed.");
          alert("BROWSER FINGERPRINTING NOT NEEDED!")
        }

        console.log("Step-5: Authorize3d.");
        // It is time to send the first paymet.
        setTimeout(() => {
          var authorize3dRequest = {
            "sessionToken": "@Model.SessionToken",
            "merchantId": "@Model.MerchantId",
            "merchantSiteId": "@Model.MerchantSiteId",
            "currency": currency,
            "amount": amount,
            "relatedTransactionId": initPaymentResponse.transactionId,
            "paymentOption": {
              "card": {
                "cardNumber": cardNumber,
                "cardHolderName": cardholderName,
                "expirationMonth": expMonth,
                "expirationYear": expYear,
                "CVV": CVV,
                "threeD": {
                  "methodCompletionInd": "U",
                  "version": "2.1.0",
                  "notificationURL": "https://3dsn.sandbox.safecharge.com/ThreeDSMethod/api/ThreeDSMethod/threeDSMethodURL",
                  "merchantURL": "http://www.The-Merchant-Website-Fully-Quallified-URL.com",
                  "platformType": "02",
                  "v2AdditionalParams": {
                    "challengePreference": "01",
                    "deliveryEmail": "The_Email_Address_The_Merchandise_Was_Delivered@yoyoyo.com",
                    "deliveryTimeFrame": "03",
                    "giftCardAmount": "1",
                    "giftCardCount": "41",
                    "giftCardCurrency": "USD",
                    "preOrderDate": "20220511",
                    "preOrderPurchaseInd": "02",
                    "reorderItemsInd": "01",
                    "shipIndicator": "06",
                    "rebillExpiry": "20200101",
                    "rebillFrequency": "13",
                    "challengeWindowSize": "05"
                  },
                  "browserDetails": {
                    "acceptHeader": "text/html,application/xhtml+xml",
                    "ip": "192.168.1.11",
                    "javaEnabled": "TRUE",
                    "javaScriptEnabled": "TRUE",
                    "language": "EN",
                    "colorDepth": "48",
                    "screenHeight": "400",
                    "screenWidth": "600",
                    "timeZone": "0",
                    "userAgent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47"
                  },
                  "account": {
                    "age": "05",
                    "lastChangeDate": "20190220",
                    "lastChangeInd": "04",
                    "registrationDate": "20190221",
                    "passwordChangeDate": "20190222",
                    "resetInd": "01",
                    "purchasesCount6M": "6",
                    "addCardAttempts24H": "24",
                    "transactionsCount24H": "23",
                    "transactionsCount1Y": "998",
                    "cardSavedDate": "20190223",
                    "cardSavedInd": "02",
                    "addressFirstUseDate": "20190224",
                    "addressFirstUseInd": "03",
                    "nameInd": "02",
                    "suspiciousActivityInd": "01"
                  }
                }
              }
            },
            "billingAddress": {
              "firstName": "John",
              "lastName": "Smith",
              "address": "340689 main St.",
              "city": "London",
              "country": "GB",
              "email": "john.smith@safecharge.com"
            },
            "shippingAddress": {
              "firstName": "John",
              "lastName": "Smith",
              "address": "340689 main St.",
              "city": "London",
              "country": "GB",
              "email": "john.smith@safecharge.com"
            },
            "deviceDetails": {
              "ipAddress": "93.146.254.172"
            }
          }

          console.log("Step-5: Authorize3d request to merchant server.");
          console.log(authorize3dRequest);
          // Check if the version is 3d v1 then the flow is fallback to v1.
          // Set the threeD block to null.
          if (initPaymentResponse.paymentOption.card.threeD.version === ""
              || initPaymentResponse.paymentOption.card.threeD.version === undefined) {
              paymentRequest1.paymentOption.card.threeD = {};
          }

          $.ajax({
            method: "POST",
            url: "https://localhost:44356/api/threeD/Authorize3D",
            data: JSON.stringify(authorize3dRequest),
            contentType: "application/json",
            success: function (response1) {
              console.log("Step-5: Authorize3d merchant response.");
              console.log(response1);

              // Check if a Challenge required.
              if (response1.transactionStatus === "REDIRECT") {
                var challengCompletedIndication = "N";
                var acsUrl = response1.paymentOption.card.threeD.acsUrl;
                console.log("Step-5: AcsUrl.: " + acsUrl);
                var cReq = response1.paymentOption.card.threeD.cReq;
                console.log("Step-5: cReq.: " + cReq);
                var paReq = response1.paymentOption.card.threeD.paRequest || "";
                console.log("Step-5: paReq.: " + paReq);
                var termUrl = response1.TermUrl;
                console.log("Step-5: termUrl.: " + termUrl);
                var url = acsUrl;// + "&creq=" + cReq;
                var v2supported = initPaymentResponse.paymentOption.card.threeD.v2supported;
                console.log(url);

                // Check if 3d v2 supported.
                if (v2supported === "true") {
                  console.log("Step-6: Challenge. 3d v2 flow.");
                  // We continue with 3dv2 challange flow.
                  //var win = window.open(url, "_blank");
                  document.getElementById("creq").value = cReq;
                  $('#ChallengeFormv2').attr("action", url);
                  window.open(url, 'ChallengeWindowv2');
                  document.getElementById('ChallengeFormv2').submit();
                  alert("Waiting for challenge result...");
                }
                else {
                  // We continue with 3dv1 challange flow.
                  console.log("Step-6: Challenge. 3d v1 flow.");

                  document.getElementById("PaReq").value = cReq;
                  document.getElementById("TermUrl").value = cReq;
                  document.getElementById("MD").value = cReq;
                  document.getElementById("creq").value = cReq;
                  $('#threeD').attr("action", url);
                  window.open(url, 'ChallengeWindowv1');
                  document.getElementById('threeD').submit();
                  alert("Waiting for challenge result...");
                };
                alert("CHALLENGE DONE!");

                console.log("Step-7: Second payment.");
                // We have to check if we continue with v2 flow or v1 flow or non-3d.
                var paymentRequest2 = {
                  "sessionToken": "@Model.SessionToken",
                  "merchantId": "@Model.MerchantId",
                  "merchantSiteId": "@Model.MerchantSiteId",
                  "clientRequestId": "@Model.ClientRequestId",
                  "currency": currency,
                  "amount": amount,
                  "relatedTransactionId": response1.transactionId,
                  //"transactionType": "Auth",
                  "billingAddress": {
                    "country": "GB",
                    "email": "someemail@somedomain.com"
                  },
                  "paymentOption": {
                    "card": {
                      "cardNumber": cardNumber,
                      "cardHolderName": cardholderName,
                      "expirationMonth": expMonth,
                      "expirationYear": expYear,
                      "CVV": CVV,
                    },
                  },
                  "deviceDetails": {
                    "ipAddress": "10.0.0.193"
                  },
                  "timeStamp": timestamp,
                  "checksum": checksumForPayment
                };
                console.log("Step-7: Second payment request to merchant server.");
                console.log(paymentRequest2);
                $.ajax({
                  method: "POST",
                  url: "https://localhost:44356/api/threeD/Verify3D",
                  data: JSON.stringify(paymentRequest2),
                  contentType: "application/json",
                  success: function (paymentResponse2) {
                    console.log("Step-7: Second payment merchant response.");
                    console.log(paymentResponse2);
                    alert("CHALLENGE FLOW SUCCESSFULLY COMPLETED!");
                  },
                });

              }
              else if (response1.transactionStatus === "APPROVED") {// Verify3d
                console.log("Step-7: Verify 3d.");
                // We have to check if we continue with v2 flow or v1 flow or non-3d.
                var verifyRequest = {
                  "sessionToken": "@Model.SessionToken",
                  "merchantId": "@Model.MerchantId",
                  "merchantSiteId": "@Model.MerchantSiteId",
                  "clientRequestId": "@Model.ClientRequestId",
                  "currency": currency,
                  "amount": amount,
                  "relatedTransactionId": response1.transactionId,
                  "paymentOption": {
                    "card": {
                      "cardNumber": cardNumber,
                      "cardHolderName": cardholderName,
                      "expirationMonth": expMonth,
                      "expirationYear": expYear,
                      "CVV": CVV,
                    },
                  },
                  "deviceDetails": {
                    "ipAddress": "10.0.0.193"
                  },
                  "billingAddress": {
                    "country": "GB",
                    "email": "someemail@somedomain.com"
                  },
                };
                console.log("Step-7: Second payment request to merchant server.");
                console.log(verifyRequest);

                $.ajax({
                  method: "POST",
                  url: "https://localhost:44356/api/threeD/Verify3D",
                  data: JSON.stringify(verifyRequest),
                  contentType: "application/json",
                  success: function (verifyResponse) {
                    console.log("Step-7: Second payment merchant response.");
                    console.log(verifyResponse);
                    alert("VERIFY SUCCESSFULLY COMPLETED!");
                    // Now process payment

                    var paymentRequest = {
                      "sessionToken": "@Model.SessionToken",
                      "merchantId": "@Model.MerchantId",
                      "merchantSiteId": "@Model.MerchantSiteId",
                      "clientRequestId": "@Model.ClientRequestId",
                      "currency": currency,
                      "amount": amount,
                      "relatedTransactionId": response1.transactionId,
                      "transactionType": "Auth",
                      "paymentOption": {
                        "card": {
                          "cardNumber": cardNumber,
                          "cardHolderName": cardholderName,
                          "expirationMonth": expMonth,
                          "expirationYear": expYear,
                          "CVV": CVV,
                        },
                      },
                      "deviceDetails": {
                        "ipAddress": "10.0.0.193"
                      },
                      "billingAddress": {
                        "country": "GB",
                        "email": "someemail@somedomain.com"
                      },
                    };

                    $.ajax({
                      method: "POST",
                      url: "https://localhost:44356/api/threeD/PaymentSTS3D1",
                      data: JSON.stringify(paymentRequest),
                      contentType: "application/json",
                      success: function (paymentResponse2) {
                        console.log("Step-7: Second payment merchant response.");
                        console.log(paymentResponse2);
                        alert("PAYMENT SUCCESSFULLY COMPLETED!");
                        alert("FRICTIONLESS FLOW SUCCESSFULLY COMPLETED!");
                      },
                    });
                  },
                });
              }
              else {// Error returned.
                // Redirect to Error page.
                alert("ERROR!");
              }
            }
          });
        }, 9000); // We can remove because fingerprinting has its own counter.
      }
    });
        }
  </script>
}

